# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: CI Coherence Hibernate
run-name: ${{ github.event.head_commit.message }} [${{ github.event_name }}][${{ github.ref_name }}]
on:
  push:
    branches:
      - main
      - '[1-9]+.[0-9]+.x'
  workflow_dispatch:
jobs:
  build:
    if: github.repository_owner == 'coherence-community'
    strategy:
      matrix:
        coherence-version: [ 'LATEST' ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.1
    - name: Set up JDK 17
      uses: actions/setup-java@v4.5.0
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Build - Hibernate 6.x with Maven + Sonar
      if: "github.event_name != 'pull_request'"
      run: |
        git config --global user.email "github-action@users.noreply.github.com"
        git config --global user.name "GitHub Action"
        ./mvnw clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=coherence-community_coherence-hibernate -Dsonar.branch.name=${{ env.GITHUB_REF_NAME }} -B -Phibernate6 -Powasp -Pcoverage
      env:
        MAVEN_GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
        GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
        SONAR_TOKEN: "${{secrets.SONAR_TOKEN}}"
        NVD_API_KEY: "${{secrets.NVD_API_KEY}}"
    - name: Build - Hibernate 6.x
      if: "github.event_name == 'pull_request'"
      run: mvn clean install -B -Powasp -Phibernate6
    - name: Build - Hibernate 5.6.x
      run: mvn clean install -B -Powasp -Phibernate53
    - name: Build with Coherence ${{ matrix.coherence-version }}
      if: "matrix.coherence-version == '14_1_1'"
      run: |
        git config --global user.email "github-action@users.noreply.github.com"
        git config --global user.name "GitHub Action"
        mvn clean install -B --settings .mvn/settings.xml -Pcoherence14_1_1
    - name: Build + deploy with Maven (Website + Snapshots) - ${{ matrix.coherence-version }}
      if: "matrix.coherence-version == 'LATEST'"
      run: |
          git config --global user.email "github-action@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          mvn clean deploy -B -Powasp --settings .mvn/settings.xml
      env:
        MAVEN_GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
        MAVEN_SONATYPE_USERNAME: "${{secrets.MAVEN_SONATYPE_USERNAME}}"
        MAVEN_SONATYPE_TOKEN: "${{secrets.MAVEN_SONATYPE_TOKEN}}"
        NVD_API_KEY: "${{secrets.NVD_API_KEY}}"
    - name: Clean Maven cache
      run: |
        find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
